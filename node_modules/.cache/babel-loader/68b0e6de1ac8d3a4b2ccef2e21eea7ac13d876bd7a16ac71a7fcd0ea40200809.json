{"ast":null,"code":"var _jsxFileName = \"/Users/sehandukurukularatne/Desktop/Smart Shop Assistant/frontend/src/Components/WelcomeBanner/WelcomeBanner.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport './WelcomeBanner.css';\nimport { Link } from 'react-router-dom';\nimport image1 from '../Assets/Smart-Shopping-Assistant-1';\nimport image2 from '../Assets/Smart-Shopping-Assistant-2';\nimport image3 from '../Assets/Welcome-banner-image-3.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WelcomeBanner = () => {\n  _s();\n  const [currentSlide, setCurrentSlide] = useState(0);\n  const [typedText, setTypedText] = useState('');\n  const [isTyping, setIsTyping] = useState(true);\n  const slides = [image1, image2, image3];\n\n  // Slideshow effect\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrentSlide(prevSlide => (prevSlide + 1) % slides.length);\n    }, 3000);\n    return () => clearInterval(interval);\n  }, [slides.length]);\n\n  // Typing effect\n  useEffect(() => {\n    let index = 0;\n    const typingInterval = setInterval(() => {\n      if (index < textToType.length) {\n        setTypedText(prev => prev + textToType.charAt(index));\n        index++;\n      } else {\n        clearInterval(typingInterval);\n        setIsTyping(false);\n      }\n    }, 100);\n    return () => clearInterval(typingInterval);\n  }, [textToType]);\n\n  // Handle dot click for slideshow\n  const handleDotClick = index => {\n    setCurrentSlide(index);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"welcomebanner\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slideshow\",\n      children: [slides.map((slide, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: slide,\n        alt: `Slide ${index + 1}`,\n        className: index === currentSlide ? 'active' : 'inactive'\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dots\",\n        children: slides.map((_, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n          className: index === currentSlide ? 'dot active' : 'dot',\n          onClick: () => handleDotClick(index)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `welcome-message ${isTyping ? 'typing' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: typedText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), !userDetails && !isTyping && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Please login to continue.\", /*#__PURE__*/_jsxDEV(\"button\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/loginsignup/login\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(WelcomeBanner, \"SHKibULPg1jWpAb/utzvpNYDkso=\");\n_c = WelcomeBanner;\nexport default WelcomeBanner;\nvar _c;\n$RefreshReg$(_c, \"WelcomeBanner\");","map":{"version":3,"names":["React","useContext","useEffect","useState","Link","image1","image2","image3","jsxDEV","_jsxDEV","WelcomeBanner","_s","currentSlide","setCurrentSlide","typedText","setTypedText","isTyping","setIsTyping","slides","interval","setInterval","prevSlide","length","clearInterval","index","typingInterval","textToType","prev","charAt","handleDotClick","className","children","map","slide","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_","onClick","userDetails","to","_c","$RefreshReg$"],"sources":["/Users/sehandukurukularatne/Desktop/Smart Shop Assistant/frontend/src/Components/WelcomeBanner/WelcomeBanner.jsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport './WelcomeBanner.css';\nimport { Link } from 'react-router-dom';\n\nimport image1 from '../Assets/Smart-Shopping-Assistant-1';\nimport image2 from '../Assets/Smart-Shopping-Assistant-2';\nimport image3 from '../Assets/Welcome-banner-image-3.png';\n\nconst WelcomeBanner = () => {\n  const [currentSlide, setCurrentSlide] = useState(0);\n  const [typedText, setTypedText] = useState('');\n  const [isTyping, setIsTyping] = useState(true);\n\n  const slides = [image1, image2, image3];\n \n  // Slideshow effect\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrentSlide((prevSlide) => (prevSlide + 1) % slides.length);\n    }, 3000);\n    return () => clearInterval(interval);\n  }, [slides.length]);\n\n  // Typing effect\n  useEffect(() => {\n    let index = 0;\n    const typingInterval = setInterval(() => {\n      if (index < textToType.length) {\n        setTypedText((prev) => prev + textToType.charAt(index));\n        index++;\n      } else {\n        clearInterval(typingInterval);\n        setIsTyping(false);\n      }\n    }, 100);\n\n    return () => clearInterval(typingInterval);\n  }, [textToType]);\n\n  // Handle dot click for slideshow\n  const handleDotClick = (index) => {\n    setCurrentSlide(index);\n  };\n\n  return (\n    <div className='welcomebanner'>\n      <div className='slideshow'>\n        {slides.map((slide, index) => (\n          <img\n            key={index}\n            src={slide}\n            alt={`Slide ${index + 1}`}\n            className={index === currentSlide ? 'active' : 'inactive'}\n          />\n        ))}\n        <div className='dots'>\n          {slides.map((_, index) => (\n            <span\n              key={index}\n              className={index === currentSlide ? 'dot active' : 'dot'}\n              onClick={() => handleDotClick(index)}\n            />\n          ))}\n        </div>\n      </div>\n      <div className={`welcome-message ${isTyping ? 'typing' : ''}`}>\n        <h1>{typedText}</h1>\n        {!userDetails && !isTyping && (\n          <div>\n            <p>\n              Please login to continue. \n              <button><Link to='/loginsignup/login'>Login</Link></button>\n            </p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default WelcomeBanner;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}